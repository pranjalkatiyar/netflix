{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","images/netflix-logo-png-2562.png","components/NavBar.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","settrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","console","log","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY_TMBD","process","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","Banner","str","n","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","NavBar","show","handleShow","window","addEventListener","scrollY","removeEventListener","logo","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6f01661b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\nexport default instance;\r\n","import React, {useEffect,useState} from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport axios from \"../axios\";\r\nimport \"../row.css\";\r\n\r\n const base_url=\"https://image.tmdb.org/t/p/original\";\r\n\r\n\r\nfunction Row({\r\n  title,\r\n  fetchUrl,\r\n  isLargeRow\r\n}) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, settrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //if [] , run once when row loads\r\n    async function fetchData() {\r\n      //https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      // console.log(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick =(movie)=>{\r\n    if (trailerUrl){\r\n      settrailerUrl('');\r\n    }\r\n    else{\r\n      movieTrailer(movie?.name || \"\")\r\n      .then(url=>{\r\n        //pass the url inside the urlparams\r\n        //youtube.com/v=65426416jhftyf7628ugu\r\n          const urlParams= new URLSearchParams(new URL(url).search);\r\n         settrailerUrl(urlParams.get('v'));\r\n         console.log(urlParams.get('v'))\r\n      }) \r\n      .catch((error)=>console.log(error));\r\n    }\r\n  }\r\n  \r\n  return ( \r\n  <div className=\"row\">\r\n        <h2 className=\"title\"> {title} </h2> \r\n    <div className = \"rowPosters\" >\r\n     {/*several row poster*/ } \r\n     {movies.map(movie => ( <\r\n        img \r\n        key={movie.id}\r\n        onClick={()=>handleClick(movie)}\r\n        className = {`rowPoster ${isLargeRow && \"rowPosterLarge\"}`}\r\n        src = {`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`}\r\n        alt = {movie.name}\r\n        />\r\n      ))\r\n    } </div> \r\n    {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;","const API_KEY_TMBD =`${process.env.REACT_APP_API_KEY_TMBD}`;\r\n\r\nconst request = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY_TMBD}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY_TMBD}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY_TMBD}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY_TMBD}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY_TMBD}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY_TMBD}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY_TMBD}&with_genres=10749`,\r\n  fetchDocumentries: `/discover/movie?api_key=${API_KEY_TMBD}&with_genres=99`\r\n};\r\n\r\nexport default request;","import React, {useState,useEffect} from 'react';\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport \"../banner.css\";\r\n\r\n\r\nfunction Banner() {\r\n\r\n\r\n    const [movie,setMovie]=useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\nconst request=await axios.get(requests.fetchNetflixOriginals);\r\nsetMovie(request.data.results[Math.floor(Math.random()*request.data.results.length-1)])\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\nfunction truncate(str,n){\r\n    return str?.length>n?str.substr(0,n-1)+\"...\":str;\r\n}\r\n\r\n    return (\r\n        \r\n        <header className='banner'\r\n        style={{backgroundSize:\"cover\",\r\n        backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`\r\n        ,backgroundPosition:\"center\",\r\n        }}>\r\n            {/* title*/}\r\n            {/*Backgroung image->.div->2button->decription */}\r\n            <div className='bannerContent'>\r\n                <h1 className='banner_title'>\r\n                    {movie?.title||movie?.name||movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner_buttons\">\r\n                 <button className='banner_button'>Play</button>\r\n                 <button className='banner_button'>My List</button>\r\n                </div>\r\n                <h1 className='banner_description'>\r\n                {truncate(movie?.overview,150)}\r\n                </h1>\r\n\r\n            </div>\r\n\r\n            <div className='banner_bottomfade'>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","export default __webpack_public_path__ + \"static/media/netflix-logo-png-2562.b39480d0.png\";","import React,{useEffect,useState} from 'react'\r\nimport logo from \"../images/netflix-logo-png-2562.png\";\r\nimport \"../nav.css\";\r\nfunction NavBar() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"scroll\",()=>{\r\n          if(window.scrollY>100){\r\n            handleShow(true);\r\n          }\r\n          else{\r\n              handleShow(false);\r\n          }\r\n      });\r\n      return () => {\r\n          window.removeEventListener(\"scroll\");\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img className='nav_logo' src={logo} alt=\"logo\"/>           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import \"./styles.css\";\nimport Row from \"./components/Row\";\nimport request from \"./requests\";\nimport Banner from \"./components/Banner\";\nimport NavBar from \"./components/NavBar\";\nfunction App() {\n  return (\n      <div className=\"App\">\n      <NavBar/>\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={request.fetchNetflixOriginals} isLargeRow/>\n      <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated}/>\n      <Row title=\"Trending Now\" fetchUrl={request.fetchTrending} />\n      <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies} />\n      <Row title=\"horror Movies\" fetchUrl={request.fetchHorrorMovies} />\n      <Row title=\"Documentaries\" fetchUrl={request.fetchDocumentries} />\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}